
@{
    ViewBag.Title = "Enter Fish";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Loading Google Map API engine v3 -->
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&key=AIzaSyANEBMQerLdjbCKtJ4_4fpptEoWJqwDqEU"></script>
<script src="~/Scripts/gmap3.js"></script>                       @*http://gmap3.net/en/pages/5-getting-started/#downloading-gmap3-12*@
<script src="~/Scripts/Plugins/skycons.js"></script>    
<script src="~/Scripts/nouislider.js"></script>          
<link href="~/Content/nouislider.css" rel="stylesheet" />

<script src="http://malsup.github.com/jquery.form.js"></script>   @*for the fileupload thing, found here: http://www.dotnetawesome.com/2014/10/how-to-upload-files-asynchronously-using-aspnet-mvc4-application.html*@

@*<link type="text/css" rel="stylesheet" href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.2.2/css/bootstrap-combined.min.css" />
    @*<link type="text/css" rel="stylesheet" href="http://http://gregfranko.com/jquery.selectBoxIt.js/css/jquery.selectBoxIt.css" />*@

@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
@*<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>*@
@*<script src="http://gregfranko.com/jquery.selectBoxIt.js/js/jquery.selectBoxIt.min.js"></script>*@




<script>

    // Google Maps Stuff *******
    var map;
    var marker = null;
    var markerLat = null;
    var markerLng = null;

    var mapOptions = {
        zoom: 13,
        disableDefaultUI: false,
        center: new google.maps.LatLng(44.073280448966436, -91.65181159973145), //center map on this location
        mapTypeId: google.maps.MapTypeId.SATELLITE
    };

    var viewport = {
        width: window.screen.width,
        height: window.screen.height
    };

    function initializeMap() {

        if (viewport.width > 750) {
            $(".loc1").hide();
            $(".loc2").show();

            $("#map2").height(500);
            map = new google.maps.Map(document.getElementById('map2'), mapOptions);
        }
        else {
            $(".loc1").show();
            $(".loc2").hide();
            $("#map1").height(viewport.height * .77);
            map = new google.maps.Map(document.getElementById('map1'), mapOptions);
        }


        google.maps.event.addListener(map, 'click', function (event) {
            //call function to create marker

            $("#coordinate").text(event.latLng.lat() + ", " + event.latLng.lng());
            $("#coordinate2").text(event.latLng.lat() + ", " + event.latLng.lng());
            $("#coordinate").select();

            //delete the old marker
            if (marker) { marker.setMap(null); }

            //set new marker
            marker = new google.maps.Marker({ position: event.latLng, map: map });
            markerLat = event.latLng.lat();
            markerLng = event.latLng.lng();

            $("#decLatitude").val(event.latLng.lat());
            $("#decLongitude").val(event.latLng.lng());

        });

    }

    google.maps.event.addDomListener(window, 'load', initializeMap);


    $(document).ready(function () {

        //hide stuff... noUiSliders dont play nice with  hidden elements
        $("#Length").hide();
        $("#Weight").hide();
        //$("#LureInfo").hide();
        //$("#WeatherInfo").hide();

        loadSliders(true);  //initilze sliders
        $("#Length").show();
        $("#Weight").show();

        // Check if mobile device
        mobileAndTabletcheck = function () {
            var mobileCheck = false;
            (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
            return mobileCheck;
        }
        var isMobile = mobileAndTabletcheck();
        if (isMobile) {
            $("#MobileCameraDiv").show();
        }

        // Sliders
        function loadSliders(init) {

            var SpeciesID;
            var SpeciesName;
            var LengthSliderMin = 5;
            var LengthSliderMax = 25;
            var LengthSliderStart = 10;
            var LengthSliderStep = .25;
            var WeigthSliderMin = 0;
            var WeightSliderMax = 10;
            var WeightSliderStart = 2;
            var WeightSliderStep = .25;

            if (init == true) {
                lengthSlider();
                weightSlider();
            }

            //get values for species
            $.ajax({
                url: '@Url.Action("GetSliderValuesForSpecies", "Fish")',
                data: { Species: $("#speciesList").val() },
                type: "POST",
                success: function (data) {
                    SpeciesID = data.SpeciesID;
                    SpeciesName = data.SpeciesName;
                    LengthSliderMin = data.LengthSliderMin;
                    LengthSliderMax = data.LengthSliderMax;
                    LengthSliderStart = data.LengthSliderStart;
                    LengthSliderStep = data.LengthSliderStep;
                    WeigthSliderMin = data.WeightSliderMin;
                    WeightSliderMax = data.WeightSliderMax;
                    WeightSliderStart = data.WeightSliderStart;
                    WeightSliderStep = data.WeightSliderStep;

                    updateSliders(LengthSliderMin, LengthSliderMax, LengthSliderStart, LengthSliderStep, WeigthSliderMin, WeightSliderMax, WeightSliderStart, WeightSliderStep);
                },
                error: function(){
                    alert("error fetching slider values");
                }
            });

            function updateSliders(lMin, lMax, lStart, lStep, wMin, wMax, wStart, wStep) {
                LengthSlider.noUiSlider.updateOptions({
                    start: [lStart],
                    step: lStep,
                    range: {
                        'min': lMin,
                        'max': lMax,
                    }
                });

                WeightSlider.noUiSlider.updateOptions({
                    start: [wStart],
                    step: wStep,
                    range: {
                        'min': wMin,
                        'max': wMax,
                    }
                });
            }

            function lengthSlider() {
                var LengthSlider = document.getElementById('LengthSlider');
                noUiSlider.create(LengthSlider, {
                    start: [LengthSliderStart],
                    step: LengthSliderStep,
                    connect: true,
                    range: {
                        'min': LengthSliderMin,
                        'max': LengthSliderMax
                    },
                    pips: {
                        mode: 'positions',
                        values: [0, 20, 40, 60, 80, 100],
                        density: 5,
                        stepped: true
                    }
                });
                var length_nodes = [
                    document.getElementById('length-value') // 0
                    //document.getElementById('upper-value')  // 1
                ];
                // Display the slider value
                LengthSlider.noUiSlider.on('update', function (values, handle, unencoded, isTap, positions) {
                    length_nodes[handle].innerHTML = values[handle] + " Inches",
                        $("#decLengthInches").val(values[handle]);
                });
            }

            function weightSlider() {
                var WeightSlider = document.getElementById('WeightSlider');
                noUiSlider.create(WeightSlider, {
                    start: [2],
                    step: .1,
                    connect: true,
                    range: {
                        'min': 1,
                        'max': 8
                    },
                    pips: {
                        mode: 'positions',
                        values: [0, 20, 40, 60, 80, 100],
                        density: 5,
                        stepped: true
                    }
                });
                var weight_nodes = [
                    document.getElementById('weight-value') // 0
                ];
                // Display the slider value and update hidden field (decWeightLbs)
                WeightSlider.noUiSlider.on('update', function (values, handle, unencoded, isTap, positions) {
                    weight_nodes[handle].innerHTML = values[handle] + " Lbs",
                        $("#decWeightLbs").val(values[handle]);
                });
            }

        }

        //$(".map").width(window.screen.width);
        //$(".map").width(window.screen.height);


        $("#FileInput").change(function () {
            $("#UploadFileBtn").show();
        })

        $("#enterFishSubmit").click(function () {
            if ($("#speciesList").val() == "Add Species") {
                $("#strSpecies").val(($("#newSpeciesTextBox").val()))
                $("#fishForm").submit();
            }
            else {
                $("#strSpecies").val(($("#speciesList").val()))
                $("#fishForm").submit();
            }

        });

        $("#testBtn").click(function () {
            $("#decLenthInches").val("99");
            $("#decWeightLbs").val("99");
            $("#strLocation").val("99");
            $("#strLocation").val("99");
            $("#decWaterLevel").val("99");
        });

        $("#speciesList").change(function () {

            if ($("#speciesList").val() == "Add Species") {
                $("#speciesDiv").hide(0, $("#newSpeciesDiv").show());
            }
            else {
                loadSliders(false);
                $("#Length").show();
                $("#Weight").show();
            }
        })

        $("#newSpeciesCancelBtn").click(function () {
            $("#newSpeciesDiv").hide(0, $("#speciesDiv").show());
        });

        $("#addImageBtn").click(function () {
            $("#optionsDiv").fadeIn(250);
        });

        $("#RemoveImageBtn").click(function () {
            $.ajax({
                url: '@Url.Action("deleteImage", "Fish")',
                data: { fishID: '@Model.FishID', imageNum: 1 },
                type: "POST",
                success: function (date) {
                    $("#uploadDiv").show();
                    $("#imageDiv").hide();
                },
                error: function(){
                    alert("error removing image");
                }
            });
        });

        $("#getWeatherBtn").click(function () {
            getWeather();
        });

        $("#weatherRefreshBtn").click(function () {
            getWeather();
        });

        $("#dateTimeTestBtn").click(function () {
            var dt = new Date($.now());
            var date = dt.toLocaleDateString();
            var time = dt.toLocaleTimeString();

            $("#dteDateTimeCaught_Date").val(date);
            $("#dteDateTimeCaught_TimeOfDay").val(time);
        });

        $("#pictureBtn").click(function () {

            if (hasGetUserMedia()) {
                // Good to go!
            } else {
                alert('getUserMedia() is not supported in your browser');
            }

        });

        function hasGetUserMedia() {
            return !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||
                navigator.mozGetUserMedia || navigator.msGetUserMedia);
        }

        function getWeather() {
            if (markerLat == null || markerLng == null) {
                alert("no location for weather")
                return;
            }

            var imageDt = null; // get this from datepicker eventually
            var dateCaught = $("#dteDateTimeCaught_Date").val();
            var timeCaught = $("#dteDateTimeCaught_TimeOfDay").val();

            $.ajax({
                url: "/Fish/getWeather",
                datatype: "text",
                data: { 'latitude': markerLat, 'longitude': markerLng, 'dateCaught': dateCaught, 'timeCaught': timeCaught },
                type: "POST",
                success: function (data) {
                    if (data == false) {
                        alert("datetime error");
                    }
                    else {
                        $("#weatherBasics").show();
                        $("#temp").html(data.temp + "&deg;" + ", feels like:" + data.feelsLike);
                        $("#weatherDesc").text(data.summary);
                        $("#iconText").text(data.icon);
                        $("#windSpeed").text("Wind Speed: " + data.windSpd);
                        $("#windDirection").text("Bearing: " + data.windDir);
                        $("#weatherRefreshBtn").show();
                        $("#getWeather").hide();
                        drawIcon(data.icon);
                    }
                },
                error: function () {
                    alert("error");
                }
            });
        }

        // SkyCons  Draw Icon
        function drawIcon(icon) {
            var skycons = new Skycons({ "color": "#428bca" });
            // on Android, a nasty hack is needed: {"resizeClear": true}

            // you can add a canvas by it's ID...
            //skycons.add("icon1", Skycons.PARTLY_CLOUDY_DAY);

            // ...or by the canvas DOM element itself.
            //skycons.add(document.getElementById("icon2"), Skycons.RAIN);

            // if you're using the Forecast API, you can also supply
            // strings: "partly-cloudy-day" or "rain".

            skycons.add("icon1", icon);



            // start animation!
            skycons.play();

            // you can also halt animation with skycons.pause()

            // want to change the icon? no problem:
            //skycons.set("icon1", Skycons.PARTLY_CLOUDY_NIGHT);

            // want to remove one altogether? no problem:
            //skycons.remove("icon2");
        }

        var imageID;

        // Photo Upload Progress Bar
        (function () {
            var bar = $('#progress-bar');
            var percent = $('#progress-bar');
            var status = $('#status');

            $('#UploadImage').ajaxForm({
                beforeSend: function () {
                    //show progress bar
                    status.empty();
                    var percentValue = '0%';
                    bar.width(percentValue);
                    percent.html(percentValue);
                },
                uploadProgress: function (event, position, total, percentComplete) {
                    $("#progress").show();
                    var percentValue = percentComplete + '%';
                    bar.width(percentValue);
                    percent.html(percentValue);
                },
                success: function (data) {
                    var percentValue = '100%';
                    bar.width(percentValue);
                    percent.html(percentValue);
                    $('#FileInput').val('');
                    //alert(d);
                    $("#imageDiv").show();

                    // reset and hide progress bar
                    status.empty();
                    var percentValue = '0%';-
                    $("#uploadDiv").hide();
                    $("#progress").hide();
                    bar.width(percentValue);
                    percent.html(percentValue);
                    $("#UploadFileBtn").hide();

                    //show image
                    $("#fishThumb").attr("src", data.url)   //old

                    @*//  https://stackoverflow.com/questions/15146212/can-you-just-update-a-partial-view-instead-of-full-page-post
                    //var fishID = '@Model.FishID';
                    $.ajax({
                        url: '/Fish/_ThumbnailPartial/',
                        type: "GET",
                        data: 'fishID=@Model.FishID',
                        success: function (result) {
                            alert("success: result=" + result);
                            $("#imageDiv").html(result);
                        },
                        error: function () {
                            alert('error: result=' + result);
                        }
                    });*@                    

                    //resize once image is loaded and you know its orientation
                    $("#fishThumb").load(function () {
                        if ($(this).width() > $(this).height()) {
                            $(this).width("90%");
                        }
                        else {
                            $(this).height("250px");
                        }
                    });

                    //set marker on map if we have cords
                    var imageLat = data.latitude;
                    var imageLng = data.longitude;
                    if (!((imageLat == 0) && (imageLng == 0))) {
                        var imgLatLng = new google.maps.LatLng(imageLat, imageLng);

                        //set global markerCoords variables for use with other stuff
                        markerLat = imageLat;
                        markerLng = imageLng;

                        if (marker) { marker.setMap(null); }                                      //delete the old marker
                        marker = new google.maps.Marker({ position: imgLatLng, map: map });    //set new marker
                        mapOptions.center = new google.maps.LatLng(imageLat, imageLng); //center map on this location.

                        map.panTo(imgLatLng);
                    }

                    //fill in date and time caught
                    if (data.imageDate != "1/1/0001") {
                        $("#dteDateTimeCaught_Date").val(data.imageDate);
                        $("#dteDateTimeCaught_TimeOfDay").val(data.imageTime);
                    }

                    //map.reloadMap();
                },
                complete: function (url) {
                    //status.html(xhr.responseText);

                }
            });

        })();


        // Show sections
        $("#LureHeader").click(function () {
            $("#LureHeaderArrow", this).toggleClass("glyphicon-chevron-up glyphicon-chevron-down");
            $("#LureInfo").slideToggle("slow", function ()
            {
                // Animation complete.
            });
        });

        $("#WeatherHeader").click(function () {
            $("#WeatherHeaderArrow", this).toggleClass("glyphicon-chevron-up glyphicon-chevron-down");
            $("#WeatherInfo").slideToggle("slow", function () {
                // Animation complete.
            });
        });



    });
</script>



@model TomsFishLog.Models.FishModels.Fish

<div class="optionsDiv" id="optionsDiv" hidden="hidden">
    <div id="optionsBtns" class="text-center">
        
    </div>
</div>


<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <div class="row">


                @************************************************
                //** Image Upload Section **
                //***************************@
                <div id="ImageHeader" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 section-header">
                    <div class="row">
                        <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11 h3">Upload an Image</div>
                        <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1" style="padding-top:5px;"><div id="ImageHeaderArrow" class="glyphicon glyphicon-chevron-down"></div></div>
                    </div>
                    <div class="section-divider"></div>
                </div>
                <div id="ImageSection" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div id="uploadImage" class="section">

                        <div id="uploadDiv" class="center">
                            <h5 style="text-align:left;">Upload a GPS tagged image to automatically fill in location and weather info.</h5>
                            @using (Ajax.BeginForm("AsyncUpload", "Upload", new AjaxOptions() { HttpMethod = "POST" }, new { enctype = "multipart/form-data", id = "UploadImage" }))
        {
                    @Html.AntiForgeryToken()
                    <input id="FileInput" type="file" name="files" class="width100 fontLarge btn btn-default" />
                    <input id="UploadFileBtn" type="submit" value="Upload File" class="btn btn-primary top20 bottom20 width50 fontLarge " style="display:none;" />
}

                            <div id="progress" class="progress top15" style="display:none;">
                                <div class="progress-bar" id="progress-bar">0%</div>
                            </div>

                            <div id="MobileCameraDiv" style="display:none;">
                                <h2 class="text-center">
                                    OR
                                </h2>
                                <button id="pictureBtn" class="btn btn-primary width50 fontLarge">Take a Picture</button>
                            </div>

                        </div>

                        
                        <div id="imageDiv" class="center well" style="display:none;">
                            <button id="RemoveImageBtn" type="button" class="close closeBtn" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <div class="well-sm">
                                <img id="fishThumb" />
                            </div>

                            @*@Html.Partial("_ThumbnailPartial")*@

                            @*moved to partial view*@
                            @*<div class="well-sm">
            <button id="RemoveImage" type="button" class="close" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <img id="fishThumb" />
        </div>*@
                        </div>
                    </div>
                </div>

                @using (Html.BeginForm("submitFish", "Fish", FormMethod.Post, new { id = "fishForm" }))
    {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.FishID)
            @Html.HiddenFor(m => m.decLatitude)
            @Html.HiddenFor(m => m.decLongitude)
            @Html.HiddenFor(m => m.strSpecies)
            @Html.HiddenFor(m => m.decLengthInches)
            @Html.HiddenFor(m => m.decWeightLbs)



            //***********************************************
            //** Fish Info Section **
            //***********************
            <div id="FishHeader" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 section-header">
                <div class="row">
                    <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11 h3">Fish Info</div>
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1" style="padding-top:5px;"><div id="LureHeaderArrow" class="glyphicon glyphicon-chevron-down"></div></div>
                </div>
                <div class="section-divider"></div>
            </div>
            <div id="FishInfoContainer" class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <div id="Species" class="enterFishDiv">
                    @Html.Label("speciesList", "Species")
                    @Html.DropDownList("speciesList", TomsFishLog.DropdownMenus.DefaultSpeciesList(), null, new { @class = "form-control selectpicker" })
                </div>

                <div id="Length" class="enterFishDiv">
                    @Html.Label("LengthSlider", "Length")<span class="slider-val" id="length-value"></span>
                    <div id="LengthSlider" class="noUiSlider noUi-target noUi-ltr noUi-horizontal"></div>
                    @* @Html.Label("decLenthInches", "Length", new { @class = "left" }) *@
                    @* @Html.TextBoxFor(m => m.decLenthInches, null, new { @class = "form-control textBoxSm both" })*@
                </div>

                <div id="Weight" class="enterFishDiv">
                    @Html.Label("WeightSlider", "Weight")<span class="slider-val" id="weight-value"></span>
                    <div id="WeightSlider" class="noUiSlider noUi-target noUi-ltr noUi-horizontal"></div>
                </div>
            </div>

            <div id="DateTimeInfoContainer" class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("dateCaught", "Date")
                        @Html.TextBoxFor(m => m.dteDateTimeCaught.Date, null, new { @class = "form-control textbox-small", @data_role = "date" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("timeCaught", "Time")
                        @Html.TextBoxFor(m => m.dteDateTimeCaught.TimeOfDay, null, new { @class = "form-control textbox-small" })
                    </div>
                </div>
                <button id="dateTimeTestBtn" type="button" class="btn-primary fontMed">Now</button>
            </div>

            <div class="clearfix visible-md visible-lg"></div>



//***********************************************
//** Lure Section **
//******************
            <div id="LureHeader" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 section-header">
                <div class="row">
                    <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11 h3">Lure Info</div>
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1" style="padding-top:5px;"><div id="LureHeaderArrow" class="glyphicon glyphicon-chevron-down"></div></div>
                </div>
                <div class="section-divider"></div>
            </div>
            <div id="LureInfo" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("dateCaught", "Date")
                        @Html.TextBoxFor(m => m.dteDateTimeCaught.Date, null, new { @class = "form-control textbox-small", @data_role = "date" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("timeCaught", "Time")
                        @Html.TextBoxFor(m => m.dteDateTimeCaught.TimeOfDay, null, new { @class = "form-control textbox-small" })
                    </div>
                </div>
            </div>



//***********************************************
//** Weather Section **
//*********************
            <div id="WeatherHeader" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 section-header">
                <div class="row">
                    <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11 h3">Weather Info</div>
                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1" style="padding-top:5px;"><div id="WeatherHeaderArrow" class="glyphicon glyphicon-chevron-down"></div></div>
                </div>
                <div class="section-divider"></div>
            </div>
            <div id="WeatherInfo" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div id="getWeather">
                    <button id="getWeatherBtn" type="button" class="btn-primary fontMed">Get Weather</button>
                </div>
                <div id="weatherBasics" class="left both" hidden="hidden">

                    <div class="left">
                        <div id="weatherDesc" class="left t1"></div>
                        <div id="temp" class="left both t1"></div>
                        <div id="feelsLikeTemp" class="left both t1"></div>
                        <div id="windSpeed" class="left both t1"></div>
                        <div id="windDirection" class="left both t1"></div>
                    </div>
                    <canvas id="icon1" width="64" height="64" style="margin-left:20px;"></canvas>

                </div>

            </div>



            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="well">
                    <input id="enterFishSubmit" type="button" value="Enter Fish" class="btn btn-default" />
                    <input id="testBtn" type="button" value="testBtn" class="btn btn-default" />
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
}
            </div>

            </div>
        <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
            <div class="sectionHeader loc2">Location</div>
            <div id="locationInfo2" class="section loc2" style="padding:0px;" hidden="hidden">

                <div id="map2" class="map" style="width:100%;"></div>

                @*other examples here
                    https://developers.google.com/maps/documentation/javascript/examples/map-simple*@

                <div id="input_locationName">
                    @Html.Label("strLocationName", "Location Name", new { @class = "left" })
                    @Html.TextBoxFor(m => m.strLocationName, null, new { @class = "form-control textBoxLg both" })
                </div>
                <div id="coordinate2" class="well well-sm"></div>
            </div>
        </div>
    </div>
</div>
